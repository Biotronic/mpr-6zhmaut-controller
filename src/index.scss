@use "sass:math";

$dark: #2c2d2f !default;
$knob-d: 4em !default;
$knob-border-c: #181b1c !default;
$knob-border-w: .5em !default;
$knob-ind-c: #888 !default;
$knob-ind-focus-c: magenta !default;

*, *::before, *::after {
    box-sizing: border-box;
}

amp-zone {
    border: 2px solid black;
    width: 700px;

    display: flex;
    .buttons, .sources {
        display: flex;
        flex-direction: column;
        justify-content: space-evenly;
    }
    .knobs {
        display: flex;
        justify-content: space-evenly;
        flex-direction: row;
        div {
            display: flex;
            justify-content: space-evenly;
            flex-direction: row;
            div {
                display: flex;
                justify-content: space-evenly;
                flex-direction: column;
            }
        }
    }
}

knob-input {
    --knob-deg: 0;
    display: inline-block;
    position: relative;
    padding-bottom: 2em;
    width: $knob-d; 
    border: 0;
    text-align: center;
    user-select: none;
    input { 
        text-align: center;
        border: 0;
        margin: math.div($knob-d, 0.75) + .25em 0 0 0;
        outline: 0;
        z-index: 2;
        &::-webkit-outer-spin-button,
        &::-webkit-inner-spin-button {
            -webkit-appearance: none;
        }
        &::selection { color: currentColor; }
    }
    label {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        padding-top: $knob-d + 2em;
        z-index: 1;
        pointer-events: none;
        &::before {
            position: absolute;
            display: inline-block;
            content: '';
            left: 50%;
            top: $knob-border-w;
            width: $knob-d - $knob-border-w;
            height: $knob-d - $knob-border-w ;
            border: $knob-border-w solid $knob-border-c;
            border-radius: 100%;
            background: linear-gradient(to bottom, currentColor 0% 100%) no-repeat 50% 0%;
            background-size: .2em 1em;
            transform: translateX(-50%) rotate(calc(1deg * var(--knob-deg)));
        }
    }
    svg {
        position: absolute;
        left: 50%;
        top: 0;
        width: $knob-d + $knob-border-w;
        height: $knob-d + $knob-border-w ;
        transform: translateX(-50%);
        stroke-dasharray: 184 184;
        fill: none;
        z-index: 3;
        path {
            stroke-width: 5;
            pointer-events: stroke; 
            &:first-of-type { stroke: $knob-ind-focus-c; }
            &:last-of-type { stroke: $knob-ind-c; stroke-dashoffset: -97; } 
        }
    }
}